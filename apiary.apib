FORMAT: 1A
HOST: http://ust-course.netlify.com/api

# UST.Course
Yo man ;)

## Auth [/auth/]

### Login user [POST]
+ Request (application/json)

    + Body
    
            {
                "username": "thechosenone",
                "password": "sosecretithurts"
            }
            
    + Schema
    
            {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            }
            
+ Response 200 (application/json)

    + Body
    
            {
                "success": true,
                "token": "randomtoken"
                "profile": {}
            }
            
    + Schema
    
            {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    },
                    "token": {
                        "type": "string"
                    },
                    "profile": {
                        "type": "object"
                    }
                }
            }
            
### Logout user [DELETE]
            
+ Request (application/json)

    + Headers
    
            Authorization: xxxx
            
+ Response 200 (application/json)

    + Body
    
            {
                "success": true
            }
            
    + Schema
    
            {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    }
                }
            }
            
## Users [/users]

### Create user [POST]
+ Request (application/json)

    + Body
    
            {
                "username": "ihatenaming"
            }
            
    + Schema
    
            {
                "type": "object",
                "properties": {
                    "success": {
                        "type
                    },
                    "username": {
                        "type": "string"
                    }
                }
            }
    
+ Response 200 (application/json)

    + Body
    
            {
                "success": true,
                "profile": {
                    "id": "cba",
                    "username" : "ihatenaming"
                }
            } 

## User [/users/{id}]
+ Parameters
    + id: 'abc' (string required)

### Retrieve user information [GET]
+ Response 200 (application/json)

    + Headers
    
            Authorization: xxxx

    + Body
    
            {
                "success": true,
                "profile": {
                    "id": "12312312asd",
                    "username": "thechosenone"
                }
            }
        
    + Schema
    
            {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    },
                    "profile": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "username": {
                                "type": "string"
                            }
                        }
                    }
                }
            }



### Update user information [PUT]
+ Request (application/json)
    
    + Headers
    
            Authorization: xxxx

    + Body
    
            {
                "username": "thechosentwo"
            }
            
    + Schema
    
            {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    }
                }
            }
            
+ Response 200 (application/json)

    + Body
    
            {
                "success": true,
                "profile": {
                    "id": "abc",
                    "username" : "thechosentwo"
                }
            }

## Courses [/courses]
### Get course list [GET]
+ Request (application/json)

    + Headers
    
            Authorization: xxxx

+ Response 200 (application/json)

    + Body

            {
                "success": true,
                "courses": [
                ]
            }
            
    + Schema
    
            {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    },
                    "courses": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }

## Course [/courses/{id}]
+ Parameters
    + id: 'abc' (string optional)

### Get course [GET]
+ Request (application/json)

    + Headers
    
            Authorization: xxxx

+ Response 200 (application/json)

    + Body

            {
                "success": true,
                "course": {}
            }
            
    + Schema
    
            {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    },
                    "course": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    }    
                }
            }
            
## Course Resources [/courses/{id}/resources]
+ Parameters
    + id: 'abc' (string required)

### Get resources [GET]
+ Request (application/json)

    + Headers
    
            Authorization: xxxx

+ Response 200 (application/json)

    + Body

            {
                "success": true,
                "resources": [
                    {
                        "id": "0001",
                        "name": "Course Note",
                        "description": "A piece of course note of the course!",
                        "type": "file"
                    },
                    {
                        "id": "0002",
                        "name": "Course Note 2",
                        "description": "A piece of course note of the course!",
                        "type": "link"
                    }
                ]
            }
            
## Course Resource [/courses/{id}/resources/{rid}]
+ Parameters
    + id: 'abc' (string required)
    + rid: 'xyz' (string required)

### Get resource [GET]
+ Request (application/json)

    + Headers
    
            Authorization: xxxx

+ Response 200 (application/json)

    + Body

            {
                "success": true,
                "resource": {
                    "id": "0001",
                    "name": "Course Note",
                    "description": "A piece of course note of the course!",
                    "type": "link"
                }
            }
    
    + Schema
            
            {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    },
                    "resource": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
            
### Create resource [POST]
+ Request (application/json)

    + Headers
    
            Authorization: xxxx
    
    + Body

            {
                "name": "Course Note",
                "description": "A piece of course note of the course!",
                "type": "link"
                "value": "https://usthing.xyz"
            }

+ Response 200 (application/json)

    + Body

            {
                "success": true,
                "id": "xyz"
            }
            
### Edit resource [PUT]
+ Request (application/json)

    + Headers
    
            Authorization: xxxx
    
    + Body

            {
                "name": "Course Note",
                "description": "A piece of course note of the course!",
                "type": "link"
                "value": "https://usthing.xyz"
            }

+ Response 200 (application/json)

    + Body

            {
                "success": true,
                "id": "xyz"
            }

### Delete resource [DELETE]
+ Request (application/json)

    + Headers
    
            Authorization: xxxx

+ Response 200 (application/json)

    + Body

            {
                "success": true
            }
            
## Course Resource File [/courses/{id}/resources/{rid}/file]
+ Parameters
    + id: 'abc' (string required)
    + rid: 'xyz' (string required)
    
### Upload File [POST]
+ Request
    
    + Headers
    
            Authorization: xxxx
            
+ Request (multipart/form-data)
            
+ Response 200 (application/json)

    + Body

            {
                "success": true
            }
            
### Get File [GET]

+ Request
    
    + Headers
    
            Authorization: xxxx

+ Response 200 (application/octet-stream)

### Delete File [DELETE]

+ Request
    
    + Headers
    
            Authorization: xxxx
            
+ Response 200 (application/json)

    + Body

            {
                "success": true
            }

## Course Comments [/courses/{id}/comments]
+ Parameters
    + id: 'abc' (string required)

### Get comments [GET]
+ Request (application/json)

    + Headers
    
            Authorization: xxxx

+ Response 200 (application/json)

    + Body

            {
                "success": true,
                "comments": [
                    {
                        "id": "0001",
                        "author": "ben",
                        "createdTime": "timestamp",
                        "content": "this course is good!"
                    }
                ]
            }
            
### Create comment [POST]
+ Request (application/json)

    + Headers
    
            Authorization: xxxx
    
    + Body

            {
                "content": "https://usthing.xyz"
            }

+ Response 200 (application/json)

    + Body

            {
                "success": true,
                "id": "xyz"
            }
            
## Course Comment [/courses/{id}/comments/{cid}]
+ Parameters
    + id: 'abc' (string required)
    + cid: 'xyz' (string optional)

### Get comment [GET]
+ Request (application/json)

    + Headers
    
            Authorization: xxxx

+ Response 200 (application/json)

    + Body

            {
                "success": true,
                "comment": {
                    "id": "0001",
                    "author": "ben",
                    "createdTime": "timestamp",
                    "content": "this course is good!"
                }
            }
            
### Edit comment [PUT]
+ Request (application/json)

    + Headers
    
            Authorization: xxxx
    
    + Body

            {
                "content": "https://clippedjs.github.io"
            }

+ Response 200 (application/json)

    + Body

            {
                "success": true
            }

### Delete comment [DELETE]
+ Request (application/json)

    + Headers
    
            Authorization: xxxx

+ Response 200 (application/json)

    + Body

            {
                "success": true
            }